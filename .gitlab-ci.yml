image: node:12-alpine
stages:
  - build
  - test
  - release
  - deploy
  - analyze
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/

build_node:
  stage: build
  before_script:
    - npm i -g yarn
    - yarn install --production --frozen-lockfile
  script:
    - yarn run build --prefix-paths bytecode-website
    - mv public build
  artifacts:
    paths:
      - build/

lint:
  stage: test
  before_script:
    - npm i -g yarn
    - yarn install --frozen-lockfile
  script:
    - yarn run lint

test_jest:
  stage: test
  before_script:
    - npm i -g yarn
    - yarn install --frozen-lockfile
  script:
    - yarn run test:ci

release_docker:
  stage: release
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
#   only:
#     - master
#     - tags

deploy_prod:
  stage: deploy
#   when: manual
  image: alpine:latest
  before_script:
    - apk add curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - mkdir ~/.kube
    - cat $K8S_CONFIG_BASE64 | base64 -d > ~/.kube/config
    - kubectl version
    - cd .gitlab/k8s
  script:
    - kubectl apply -f bytecode-k8s-prod.yaml
#   only:
#     - tags

deploy_pages:
  image: alpine:3.9
  stage: deploy
  dependencies:
    - build_node
  script:
    - rm -rf public
    - mv build public
  artifacts:
    paths:
      - public
#   only:
#     - master
#     - develop
#     - release/*

include:
  - template: Code-Quality.gitlab-ci.yml
code_quality:
  stage: analyze
  dependencies: []

